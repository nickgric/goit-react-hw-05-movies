{"version":3,"file":"static/js/499.59e2719d.chunk.js","mappings":"kMAEaA,EAAgBC,EAAAA,GAAAA,QAAH,2UAkBbC,EAAqBD,EAAAA,GAAAA,GAAH,8D,SClBlBE,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAClC,OACE,UAACL,EAAD,WACGK,IAAS,SAACH,EAAD,UAAqBG,IAC9BD,IAGN,C,uGC2DD,UAzDc,WACZ,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWR,GACRS,MAAK,SAAAC,GACJN,EAASM,EAASC,KACnB,IACAC,OAAM,SAAAC,GAAK,OAAIA,GAASR,EAAS,IAAtB,GACf,GAAE,CAACL,EAASK,IAEb,IAAQS,GAAUC,EAAAA,EAAAA,MAAVD,MAER,OACEX,IACE,UAAC,IAAD,CAASJ,MAAOI,EAAMJ,MAAtB,WACE,SAAC,KAAD,CAAMiB,GAAIF,EAAQA,EAAMG,KAAO,IAA/B,sBACA,gBACEC,IACEf,EAAMgB,YAAN,yDACsDhB,EAAMgB,aACxD,kFAENC,IAAKjB,EAAMJ,SAEb,4BACE,uBAAII,EAAMkB,WACV,2BACE,qCAAalB,EAAMmB,WACnB,sCAAcnB,EAAMoB,iBACpB,qCAAapB,EAAMqB,iBACnB,qCAAarB,EAAMsB,WACnB,sCAActB,EAAMuB,eAEtB,uBAAIvB,EAAMwB,eAEZ,2BACE,yBACE,SAAC,KAAD,CAAMX,GAAG,SAASF,MAAO,CAAEG,KAAMH,EAAQA,EAAMG,KAAO,KAAtD,uBAIF,yBACE,SAAC,KAAD,CAAMD,GAAG,UAAUF,MAAO,CAAEG,KAAMH,EAAQA,EAAMG,KAAO,KAAvD,2BAKJ,SAAC,KAAD,MAIP,C,mMChEKW,EAAU,mCACVC,EAAW,gCAIJC,EAAa,mCAAG,WAAMC,GAAN,iGAEFC,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,uCACgBD,EADhB,iBACgCG,IAHnC,cAEnBrB,EAFmB,yBAMlBA,GANkB,gCAQzBuB,QAAQpB,MAAR,MARyB,yDAAH,sDAcbqB,EAAW,mCAAG,WAAOC,EAAOJ,GAAd,iGAEAC,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,gCACSD,EADT,kBAC0BO,EAD1B,gCACuDJ,EADvD,yBAFL,cAEjBrB,EAFiB,yBAMhBA,GANgB,gCAQvBuB,QAAQpB,MAAR,MARuB,yDAAH,wDAcXL,EAAU,mCAAG,WAAM4B,GAAN,iGAECJ,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,iBACNO,EADM,oBACQR,EADR,oBAFN,cAEhBlB,EAFgB,yBAMfA,GANe,gCAQtBuB,QAAQpB,MAAR,MARsB,yDAAH,sDAcVwB,EAAW,mCAAG,WAAMD,GAAN,iGAEAJ,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,iBACNO,EADM,4BACgBR,EADhB,oBAFL,cAEjBlB,EAFiB,yBAMhBA,GANgB,gCAQvBuB,QAAQpB,MAAR,MARuB,yDAAH,sDAcXyB,EAAY,mCAAG,WAAOF,EAAIL,GAAX,iGAEDC,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,iBACNO,EADM,4BACgBR,EADhB,gCAC+CG,IAHnD,cAElBrB,EAFkB,yBAMjBA,GANiB,gCAQxBuB,QAAQpB,MAAR,MARwB,yDAAH,uD","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","pages/Movie.jsx","utils/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionStyled = styled.section`\n  width: 768px;\n  margin: 0 auto;\n  padding: 0 25px;\n\n  border-radius: 10px;\n  border-color: #ccc;\n  border-style: solid;\n  padding: 30px;\n  box-shadow: 5px 5px 5px 5px #ccc;\n  margin-bottom: 20px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const SectionTitleStyled = styled.h2`\n  font-weight: 800;\n  color: brown;\n`;\n","import { SectionStyled, SectionTitleStyled } from './Section.styled';\n\nexport const Section = ({ children, title }) => {\n  return (\n    <SectionStyled>\n      {title && <SectionTitleStyled>{title}</SectionTitleStyled>}\n      {children}\n    </SectionStyled>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport {\n  useParams,\n  useLocation,\n  Outlet,\n  Link,\n  useNavigate,\n} from 'react-router-dom';\nimport { Section } from '../components/Section';\nimport { fetchMovie } from '../utils/fetchAPI';\n\nconst Movie = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMovie(movieId)\n      .then(response => {\n        setMovie(response.data);\n      })\n      .catch(error => error && navigate(`/`));\n  }, [movieId, navigate]);\n\n  const { state } = useLocation();\n\n  return (\n    movie && (\n      <Section title={movie.title}>\n        <Link to={state ? state.from : '/'}>Go back</Link>\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w600_and_h900_bestv2${movie.poster_path}`\n              : 'https://image.tmdb.org/t/p/w600_and_h900_bestv2/t9S352o0lbpXoaSC2X2T8bghGDa.jpg'\n          }\n          alt={movie.title}\n        />\n        <div>\n          <p>{movie.tagline}</p>\n          <ul>\n            <li>Status: {movie.status}</li>\n            <li>Release: {movie.release_date}</li>\n            <li>Rating: {movie.vote_average}</li>\n            <li>Budget: {movie.budget}</li>\n            <li>Revenue: {movie.revenue}</li>\n          </ul>\n          <p>{movie.overview}</p>\n        </div>\n        <ul>\n          <li>\n            <Link to=\"actors\" state={{ from: state ? state.from : '/' }}>\n              Actors\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: state ? state.from : '/' }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </Section>\n    )\n  );\n};\n\nexport default Movie;\n","import axios from 'axios';\n\nconst API_KEY = '020befa6f5b3204d9cdfb69cb3fae25a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// get popular films for main page\n// https://developers.themoviedb.org/3/trending/get-trending\nexport const fetchTrending = async page => {\n  try {\n    const response = await axios(\n      `${BASE_URL}trending/movie/week?api_key=${API_KEY}&page=${page}`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// search films by name\n// https://developers.themoviedb.org/3/search/search-movies\nexport const fetchSearch = async (query, page) => {\n  try {\n    const response = await axios(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// get film info\n// https://developers.themoviedb.org/3/movies/get-movie-details\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios(\n      `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// get film actors\n// https://developers.themoviedb.org/3/movies/get-movie-credits\nexport const fetchActors = async id => {\n  try {\n    const response = await axios(\n      `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// get film reviews\n// https://developers.themoviedb.org/3/movies/get-movie-reviews\nexport const fetchReviews = async (id, page) => {\n  try {\n    const response = await axios(\n      `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["SectionStyled","styled","SectionTitleStyled","Section","children","title","movieId","useParams","useState","movie","setMovie","navigate","useNavigate","useEffect","fetchMovie","then","response","data","catch","error","state","useLocation","to","from","src","poster_path","alt","tagline","status","release_date","vote_average","budget","revenue","overview","API_KEY","BASE_URL","fetchTrending","page","axios","console","fetchSearch","query","id","fetchActors","fetchReviews"],"sourceRoot":""}