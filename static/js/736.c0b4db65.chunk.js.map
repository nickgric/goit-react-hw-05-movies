{"version":3,"file":"static/js/736.c0b4db65.chunk.js","mappings":"mMA4BA,UAxBgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,EAAS,GAAGO,MAAK,SAAAC,GAC5BJ,EAAWI,EAASC,KAAKC,QAC1B,GACF,GAAE,CAACV,IAGFG,IACE,wBACGA,EAAQQ,KAAI,SAAAC,GAAM,OACjB,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GADC,KAS1B,C,mMCxBKC,EAAU,mCACVC,EAAW,gCAIJC,EAAa,mCAAG,WAAMC,GAAN,iGAEFC,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,uCACgBD,EADhB,iBACgCG,IAHnC,cAEnBX,EAFmB,yBAMlBA,GANkB,gCAQzBa,QAAQC,MAAR,MARyB,yDAAH,sDAcbC,EAAW,mCAAG,WAAOC,EAAOL,GAAd,iGAEAC,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,gCACSD,EADT,kBAC0BQ,EAD1B,gCACuDL,EADvD,yBAFL,cAEjBX,EAFiB,yBAMhBA,GANgB,gCAQvBa,QAAQC,MAAR,MARuB,yDAAH,wDAcXG,EAAU,mCAAG,WAAMV,GAAN,iGAECK,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,iBACNF,EADM,oBACQC,EADR,oBAFN,cAEhBR,EAFgB,yBAMfA,GANe,gCAQtBa,QAAQC,MAAR,MARsB,yDAAH,sDAcVI,EAAW,mCAAG,WAAMX,GAAN,iGAEAK,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,iBACNF,EADM,4BACgBC,EADhB,oBAFL,cAEjBR,EAFiB,yBAMhBA,GANgB,gCAQvBa,QAAQC,MAAR,MARuB,yDAAH,sDAcXhB,EAAY,mCAAG,WAAOS,EAAII,GAAX,iGAEDC,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,iBACNF,EADM,4BACgBC,EADhB,gCAC+CG,IAHnD,cAElBX,EAFkB,yBAMjBA,GANiB,gCAQxBa,QAAQC,MAAR,MARwB,yDAAH,uD","sources":["pages/Reviews.jsx","utils/fetchAPI.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchReviews } from '../utils/fetchAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(movieId, 1).then(response => {\n      setReviews(response.data.results);\n    });\n  }, [movieId]);\n\n  return (\n    reviews && (\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    )\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '020befa6f5b3204d9cdfb69cb3fae25a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// get popular films for main page\n// https://developers.themoviedb.org/3/trending/get-trending\nexport const fetchTrending = async page => {\n  try {\n    const response = await axios(\n      `${BASE_URL}trending/movie/week?api_key=${API_KEY}&page=${page}`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// search films by name\n// https://developers.themoviedb.org/3/search/search-movies\nexport const fetchSearch = async (query, page) => {\n  try {\n    const response = await axios(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// get film info\n// https://developers.themoviedb.org/3/movies/get-movie-details\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios(\n      `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// get film actors\n// https://developers.themoviedb.org/3/movies/get-movie-credits\nexport const fetchActors = async id => {\n  try {\n    const response = await axios(\n      `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// get film reviews\n// https://developers.themoviedb.org/3/movies/get-movie-reviews\nexport const fetchReviews = async (id, page) => {\n  try {\n    const response = await axios(\n      `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","then","response","data","results","map","review","author","content","id","API_KEY","BASE_URL","fetchTrending","page","axios","console","error","fetchSearch","query","fetchMovie","fetchActors"],"sourceRoot":""}